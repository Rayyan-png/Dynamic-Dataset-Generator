#backend
# backend.py
import component as comp
import pandas as pd
import random
from faker import Faker
from faker.providers import person, address, company, internet

# Initialize Faker
fake = Faker()
fake.add_provider(person)
fake.add_provider(address)
fake.add_provider(company)
fake.add_provider(internet)

# Available data types
def get_faker_mapping():
    return {
        "int":   comp.common_fields.generate_id,
        "Address": comp.common_fields.generate_address,
        "Email": comp.common_fields.generate_email,
        "Company": comp.common_fields.generate_company,
        "Job": comp.common_fields.generate_job,
        "Phone Number": comp.common_fields.generate_phone_number,
        "IPv4": comp.common_fields.generate_ipv4,
        "Date": comp.common_fields.generate_date,
        "City": comp.common_fields.generate_city,
        "Country": comp.common_fields.generate_country,
        "boolean": comp.common_fields.generate_boolean,
        "city": comp.common_fields.generate_city,
        "company_email": comp.common_fields.generate_company_email,
        "country_code": comp.common_fields.generate_country_code,
        "credit_card_expire": comp.common_fields.generate_credit_card_expire,
        "credit_card_number": comp.common_fields.generate_credit_card_number,
        "credit_card_provider": comp.common_fields.generate_credit_card_provider,
        "currency_code": comp.common_fields.generate_currency_code,
        "date_time_this_year": comp.common_fields.generate_date_time_this_year,
        "first_name": comp.common_fields.generate_first_name,
        "iban": comp.common_fields.generate_iban,
        "image_url": comp.common_fields.generate_image_url,
        "job": comp.common_fields.generate_job,
        "language_name": comp.common_fields.generate_language_name,
        "last_name": comp.common_fields.generate_last_name,
        "latitude": comp.common_fields.generate_latitude,
        "license_plate": comp.common_fields.generate_license_plate,
        "longitude": comp.common_fields.generate_longitude,
        "mac_address": comp.common_fields.generate_mac_address,
        "Phone_number": comp.common_fields.generate_phone_number,
        "postcode": comp.common_fields.generate_postcode,
        "state": comp.common_fields.generate_state,
        "street_name": comp.common_fields.generate_street_name,
        "time": comp.common_fields.generate_time,
        "time_object": comp.common_fields.generate_time_object,
        "timezone": comp.common_fields.generate_timezone,
        "url": comp.common_fields.generate_url,
        "user_name": comp.common_fields.generate_user_name,
        "word":comp.common_fields.generate_word,
        "text": comp.common_fields.generate_text,
        "zipcode": comp.common_fields.generate_zipcode,
        "crop_type": comp.agriculture_data.generate_crop_type,
        "yield_quantity_kg": comp.agriculture_data.generate_yield_quantity_kg,
        "harvest_date": comp.agriculture_data.generate_harvest_date,
        "soil_type": comp.agriculture_data.generate_soil_type,
        "irrigation_method": comp.agriculture_data.generate_irrigation_method,
        "fertilizer_used": comp.agriculture_data.generate_fertilizer_used,
        "weather_condition": comp.agriculture_data.generate_weather_condition,
        "field_size_hectares": comp.agriculture_data.generate_field_size_hectares,
        "pesticide_applied": comp.agriculture_data.generate_pesticide_applied,
        "farmer_name": comp.agriculture_data.generate_farmer_name,
        "farm_location": comp.agriculture_data.generate_farm_location,
        "seed_variety": comp.agriculture_data.generate_seed_variety,
        "crop_health": comp.agriculture_data.generate_crop_health,
        "market_price_per_kg": comp.agriculture_data.generate_market_price_per_kg,
        "organic_certified": comp.agriculture_data.generate_organic_certified,
        "machinery_used": comp.agriculture_data.generate_machinery_used,
        "water_source": comp.agriculture_data.generate_water_source,
        "planting_date": comp.agriculture_data.generate_planting_date,
        "crop_rotation": comp.agriculture_data.generate_crop_rotation,
        "asset_id": comp.common_fields.generate_id,
        "asset_id": str(fake.uuid4),  # Ensure UUID is a string
        "asset_name": comp.common_fields.generate_first_name,
        "purchase_date": comp.common_fields.generate_date,
        "asset_value": comp.assets_data.generate_asset_value,  # No pydecimal issues
        "depreciation_rate": comp.assets_data.generate_depreciation_rate,  # No pyfloat issues
        "current_value": comp.assets_data.generate_current_value,  # No pydecimal issues
        "location": fake.city,
        "current_value": comp.assets_data.generate_current_value,
        "responsible_person": fake.name,
        "serial_number": comp.assets_data.generate_serial_number,
        "asset_category": comp.assets_data.generate_asset_category,
        "supplier": fake.company,
        "purchase_price": comp.assets_data.generate_purchase_price,  # No pydecimal issues
        "usage_hours": comp.assets_data.generate_usage_hours,
        "asset_condition": comp.assets_data.generate_asset_condition,
        "insurance_policy": comp.assets_data.generate_insurance_policy,
        "insurance_expiration": comp.assets_data.generate_insurance_expiration,

        "audio_id": comp.audio_data.generate_audio_id,
        "title": comp.audio_data.generate_title,
        "duration": comp.audio_data.generate_duration,
        "bitrate": comp.audio_data.generate_bitrate,
        "sample_rate": comp.audio_data.generate_sample_rate,
        "format": comp.audio_data.generate_format,
        "codec": comp.audio_data.generate_codec,
        "file_size": comp.audio_data.generate_file_size,
        "artist": comp.audio_data.generate_artist,
        "album": comp.audio_data.generate_album,
        "genre": comp.audio_data.generate_genre,
        "release_date": comp.audio_data.generate_release_date,
        "language": comp.audio_data.generate_language,
        "license_type": comp.audio_data.generate_license_type,
        "publisher": comp.audio_data.generate_publisher,
        "explicit_content": comp.audio_data.generate_explicit_content,
        "channels": comp.audio_data.generate_channels,
        "mood": comp.audio_data.generate_mood,
        "listens": comp.audio_data.generate_listens,
        "likes": comp.audio_data.generate_likes,
        "dislikes": comp.audio_data.generate_dislikes,

        "transaction_id": comp.banking_transaction.generate_transaction_id,
        "account_number": comp.banking_transaction.generate_account_number,
        "transaction_date": comp.banking_transaction.generate_transaction_date,
        "amount": comp.banking_transaction.generate_amount,
        "currency": comp.banking_transaction.generate_currency,
        "transaction_type": comp.banking_transaction.generate_transaction_type,
        "account_balance": comp.banking_transaction.generate_account_balance,
        "customer_id": comp.banking_transaction.generate_customer_id,
        "branch_code": comp.banking_transaction.generate_branch_code,
         "transaction_status": comp.banking_transaction.generate_transaction_status,
        "merchant_name": comp.banking_transaction.generate_merchant_name,
        "payment_method": comp.banking_transaction.generate_payment_method,
        "card_number": comp.banking_transaction.generate_card_number,
        "card_type": comp.banking_transaction.generate_card_type,
        "authorization_code": comp.banking_transaction.generate_authorization_code,
        "reference_number": comp.banking_transaction.generate_reference_number,
        "customer_name": comp.banking_transaction.generate_customer_name,
        "customer_email": comp.banking_transaction.generate_customer_email,
        "fraud_flag": comp.banking_transaction.generate_fraud_flag,
        "fee_amount": comp.banking_transaction.generate_fee_amount,
        "exchange_rate": comp.banking_transaction.generate_exchange_rate,

         "invoice_id": comp.billing_invoice_data.generate_invoice_id,
        "email": comp.billing_invoice_data.generate_email,
        "customer_name": comp.billing_invoice_data.generate_customer_name,
        "customer_id": comp.billing_invoice_data.generate_customer_id,
        "billing_address": comp.billing_invoice_data.generate_billing_address,
        "invoice_date": comp.billing_invoice_data.generate_invoice_date,
        "due_date": comp.billing_invoice_data.generate_due_date,
        "total_amount": comp.billing_invoice_data.generate_total_amount,
        "currency": comp.billing_invoice_data.generate_currency,
        "payment_status": comp.billing_invoice_data.generate_payment_status,
        "payment_method": comp.billing_invoice_data.generate_payment_method,
        "tax_amount": comp.billing_invoice_data.generate_tax_amount,
        "discount": comp.billing_invoice_data.generate_discount,
        "net_amount": comp.billing_invoice_data.generate_net_amount,
        "invoice_notes": comp.billing_invoice_data.generate_invoice_notes,

            "user_id": comp.biometric_data.generate_user_id,
            "fingerprint_hash": comp.biometric_data.generate_fingerprint_hash,
            "face_id": comp.biometric_data.generate_face_id,
            "iris_scan": comp.biometric_data.generate_iris_scan,
            "voice_sample": comp.biometric_data.generate_voice_sample,
            "hand_geometry": comp.biometric_data.generate_hand_geometry,
            "retina_scan": comp.biometric_data.generate_retina_scan,
            "signature_pattern": comp.biometric_data.generate_signature_pattern,
            "dna_sequence": comp.biometric_data.generate_dna_sequence,
            "gait_pattern": comp.biometric_data.generate_gait_pattern,
            "keystroke_dynamics": comp.biometric_data.generate_keystroke_dynamics,
            "palm_vein_pattern": comp.biometric_data.generate_palm_vein_pattern,
            "ear_shape": comp.biometric_data.generate_ear_shape,
            "skin_texture": comp.biometric_data.generate_skin_texture,
            "facial_landmarks": comp.biometric_data.generate_facial_landmarks,
            "voice_pitch": comp.biometric_data.generate_voice_pitch,
            "eye_color": comp.biometric_data.generate_eye_color,
            "body_temperature": comp.biometric_data.generate_body_temperature,
            "heart_rate": comp.biometric_data.generate_heart_rate,
            "blood_pressure": comp.biometric_data.generate_blood_pressure,

            "call_id": comp.call_center_data.generate_call_id,
            "agent_id": comp.call_center_data.generate_agent_id,
            "customer_id": comp.call_center_data.generate_customer_id,
            "call_duration": comp.call_center_data.generate_call_duration,
            "call_type": comp.call_center_data.generate_call_type,
            "call_status": comp.call_center_data.generate_call_status,
            "call_timestamp": comp.call_center_data.generate_call_timestamp,
            "customer_satisfaction": comp.call_center_data.generate_customer_satisfaction,
            "issue_category": comp.call_center_data.generate_issue_category,
            "resolution_status": comp.call_center_data.generate_resolution_status,
            "call_rating": comp.call_center_data.generate_call_rating,
            "agent_name": comp.call_center_data.generate_agent_name,
            "call_center_location": comp.call_center_data.generate_call_center_location,
            "follow_up_required": comp.call_center_data.generate_follow_up_required,
            "escalation_level": comp.call_center_data.generate_escalation_level,
            "feedback_comments": comp.call_center_data.generate_feedback_comments,
            "hold_duration": comp.call_center_data.generate_hold_duration,
            "call_language": comp.call_center_data.generate_call_language,
            "call_channel": comp.call_center_data.generate_call_channel,
            "priority_level": comp.call_center_data.generate_priority_level,

            "copyright_id": comp.copyright_data.generate_copyright_id,
            "title": comp.copyright_data.generate_title,
            "owner_name": comp.copyright_data.generate_owner_name,
            "registration_date": comp.copyright_data.generate_registration_date,
            "expiration_date": comp.copyright_data.generate_expiration_date,
            "work_type": comp.copyright_data.generate_work_type,
            "jurisdiction": comp.copyright_data.generate_jurisdiction,
            "infringement_cases": comp.copyright_data.generate_infringement_cases,
            "license_type": comp.copyright_data.generate_license_type,
            "license_fee": comp.copyright_data.generate_license_fee,
            "ip_status": comp.copyright_data.generate_ip_status,
            "renewal_flag": comp.copyright_data.generate_renewal_flag,
            "application_number": comp.copyright_data.generate_application_number,
            "grant_number": comp.copyright_data.generate_grant_number,
            "publication_date": comp.copyright_data.generate_publication_date,
            "court_decision": comp.copyright_data.generate_court_decision,
            "agent_name": comp.copyright_data.generate_agent_name,
            "agency_name": comp.copyright_data.generate_agency_name,
            "related_works": comp.copyright_data.generate_related_works,
            "commercial_use": comp.copyright_data.generate_commercial_use,

            "customer_id": comp.CRM_data.generate_customer_id,
            "name": comp.CRM_data.generate_name,
            "email": comp.CRM_data.generate_email,
            "phone": comp.CRM_data.generate_phone,
            "address": comp.CRM_data.generate_address,
            "company": comp.CRM_data.generate_company,
            "industry": comp.CRM_data.generate_industry,
            "last_contact_date": comp.CRM_data.generate_last_contact_date,
            "contact_method": comp.CRM_data.generate_contact_method,
            "purchase_history": comp.CRM_data.generate_purchase_history,
            "total_spent": comp.CRM_data.generate_total_spent,
            "customer_rating": comp.CRM_data.generate_customer_rating,
            "loyalty_status": comp.CRM_data.generate_loyalty_status,
            "preferred_product_category": comp.CRM_data.generate_preferred_product_category,
            "feedback_score": comp.CRM_data.generate_feedback_score,
            "next_followup_date": comp.CRM_data.generate_next_followup_date,
            "assigned_sales_rep": comp.CRM_data.generate_assigned_sales_rep,

            "customer_id": comp.customer_data.generate_customer_id,
            "customer_name": comp.customer_data.generate_customer_name,
            "age": comp.customer_data.generate_age,
            "gender": comp.customer_data.generate_gender,
            "email": comp.customer_data.generate_email,
            "phone_number": comp.customer_data.generate_phone_number,
            "address": comp.customer_data.generate_address,
            "city": comp.customer_data.generate_city,
            "state": comp.customer_data.generate_state,
            "country": comp.customer_data.generate_country,
            "postal_code": comp.customer_data.generate_postal_code,
            "registration_date": comp.customer_data.generate_registration_date,
            "last_purchase_date": comp.customer_data.generate_last_purchase_date,
            "loyalty_points": comp.customer_data.generate_loyalty_points,
            "preferred_payment_method": comp.customer_data.generate_preferred_payment_method,
            "customer_segment": comp.customer_data.generate_customer_segment,
            "subscription_status": comp.customer_data.generate_subscription_status,
            "total_spent": comp.customer_data.generate_total_spent,
            "feedback_score": comp.customer_data.generate_feedback_score,
            "referral_source": comp.customer_data.generate_referral_source,

        "incident_id": comp.cybersecurity_data.generate_incident_id,
        "incident_type": comp.cybersecurity_data.generate_incident_type,
        "incident_date": comp.cybersecurity_data.generate_incident_date,
        "severity_level": comp.cybersecurity_data.generate_severity_level,
        "source_ip": comp.cybersecurity_data.generate_source_ip,
        "destination_ip": comp.cybersecurity_data.generate_destination_ip,
        "attack_vector": comp.cybersecurity_data.generate_attack_vector,
        "compromised_system": comp.cybersecurity_data.generate_compromised_system,
        "detection_method": comp.cybersecurity_data.generate_detection_method,
        "response_action": comp.cybersecurity_data.generate_response_action,
        "affected_department": comp.cybersecurity_data.generate_affected_department,
        "exfiltrated_data_size": comp.cybersecurity_data.generate_exfiltrated_data_size,
        "malware_family": comp.cybersecurity_data.generate_malware_family,
        "patch_status": comp.cybersecurity_data.generate_patch_status,
        "reported_by": comp.cybersecurity_data.generate_reported_by,
        "incident_duration": comp.cybersecurity_data.generate_incident_duration,
        "risk_score": comp.cybersecurity_data.generate_risk_score,
        "attack_motivation": comp.cybersecurity_data.generate_attack_motivation,
        "data_encrypted": comp.cybersecurity_data.generate_data_encrypted,
        "threat_actor_type": comp.cybersecurity_data.generate_threat_actor_type,

            "person_id": comp.demographics_data.generate_person_id,
            "first_name": comp.demographics_data.generate_first_name,
            "last_name": comp.demographics_data.generate_last_name,
            "gender": comp.demographics_data.generate_gender,
            "age": comp.demographics_data.generate_age,
            "birth_date": comp.demographics_data.generate_birth_date,
            "ethnicity": comp.demographics_data.generate_ethnicity,
            "nationality": comp.demographics_data.generate_nationality,
            "language": comp.demographics_data.generate_language,
            "education_level": comp.demographics_data.generate_education_level,
            "occupation": comp.demographics_data.generate_occupation,
            "income_level": comp.demographics_data.generate_income_level,
            "marital_status": comp.demographics_data.generate_marital_status,
            "household_size": comp.demographics_data.generate_household_size,
            "religion": comp.demographics_data.generate_religion,
            "residence_type": comp.demographics_data.generate_residence_type,
            "employment_status": comp.demographics_data.generate_employment_status,
            "health_status": comp.demographics_data.generate_health_status,
            "political_affiliation": comp.demographics_data.generate_political_affiliation,
            "citizenship_status": comp.demographics_data.generate_citizenship_status,

        "order_id": comp.ecommerce_data.generate_order_id,
        "customer_id": comp.ecommerce_data.generate_customer_id,
        "product_name": comp.ecommerce_data.generate_product_name,
        "category": comp.ecommerce_data.generate_category,
        "price": comp.ecommerce_data.generate_price,
        "order_date": comp.ecommerce_data.generate_order_date,
        "shipping_date": comp.ecommerce_data.generate_shipping_date,
        "payment_method": comp.ecommerce_data.generate_payment_method,
        "order_status": comp.ecommerce_data.generate_order_status,
        "quantity": comp.ecommerce_data.generate_quantity,
        "discount": comp.ecommerce_data.generate_discount,
        "shipping_cost": comp.ecommerce_data.generate_shipping_cost,
        "total_amount": comp.ecommerce_data.generate_total_amount,
        "customer_name": comp.ecommerce_data.generate_customer_name,
        "customer_email": comp.ecommerce_data.generate_customer_email,
        "delivery_address": comp.ecommerce_data.generate_delivery_address,
        "tracking_id": comp.ecommerce_data.generate_tracking_id,
        "review_rating": comp.ecommerce_data.generate_review_rating,
        "review_comment": comp.ecommerce_data.generate_review_comment,
        "return_reason": comp.ecommerce_data.generate_return_reason,

        "student_id": comp.educational_data.generate_student_id,
        "student_name": comp.educational_data.generate_student_name,
        "age": comp.educational_data.generate_age,
        "gender": comp.educational_data.generate_gender,
        "course_name": comp.educational_data.generate_course_name,
        "enrollment_year": comp.educational_data.generate_enrollment_year,
        "gpa": comp.educational_data.generate_gpa,
        "institution_name": comp.educational_data.generate_institution_name,
        "email": comp.educational_data.generate_email,
        "phone_number": comp.educational_data.generate_phone_number,
        "address": comp.educational_data.generate_address,
        "course_code": comp.educational_data.generate_course_code,
        "credit_hours": comp.educational_data.generate_credit_hours,
        "semester": comp.educational_data.generate_semester,
        "faculty_name": comp.educational_data.generate_faculty_name,
        "classroom_number": comp.educational_data.generate_classroom_number,
        "grade": comp.educational_data.generate_grade,
        "scholarship_status": comp.educational_data.generate_scholarship_status,
        "graduation_status": comp.educational_data.generate_graduation_status,
        "student_club": comp.educational_data.generate_student_club,


            "employee_id": comp.Employee_data.generate_employee_id,
            "name": comp.Employee_data.generate_name,
            "age": comp.Employee_data.generate_age,
            "gender": comp.Employee_data.generate_gender,
            "department": comp.Employee_data.generate_department,
            "position": comp.Employee_data.generate_position,
            "salary": comp.Employee_data.generate_salary,
            "hire_date": comp.Employee_data.generate_hire_date,
            "email": comp.Employee_data.generate_email,
            "phone": comp.Employee_data.generate_phone,
            "address": comp.Employee_data.generate_address,
            "employment_status": comp.Employee_data.generate_employment_status,


       "meter_id": comp.Energy_consumption_data.generate_meter_id,
        "energy_type": comp.Energy_consumption_data.generate_energy_type,
        "consumption_value":comp.Energy_consumption_data.generate_consumption_value,
        "unit": comp.Energy_consumption_data.generate_unit,
        "billing_cycle": comp.Energy_consumption_data.generate_billing_cycle,
        "customer_id": comp.Energy_consumption_data.generate_customer_id,
        "city": comp.Energy_consumption_data.generate_city,
        "country": comp.Energy_consumption_data.generate_country,
        "meter_read_date": comp.Energy_consumption_data.generate_meter_read_date,
        "tariff_rate": comp.Energy_consumption_data.generate_tariff_rate,
        "peak_usage": comp.Energy_consumption_data.generate_peak_usage,
        "off_peak_usage": comp.Energy_consumption_data.generate_off_peak_usage,
        "total_cost": comp.Energy_consumption_data.generate_total_cost,
        "provider_name": comp.Energy_consumption_data.generate_provider_name,
        "energy_efficiency_rating": comp.Energy_consumption_data.generate_energy_efficiency_rating,
        "usage_category": comp.Energy_consumption_data.generate_usage_category,
        "power_factor": comp.Energy_consumption_data.generate_power_factor,
        "carbon_emissions": comp.Energy_consumption_data.generate_carbon_emissions,
        "invoice_number": comp.Energy_consumption_data.generate_invoice_number,
        "payment_status": comp.Energy_consumption_data.generate_payment_status,


      "sensor_id": comp.Environmental_data.get_sensor_id,
        "air_quality_index": comp.Environmental_data.get_air_quality_index,
        "temperature_celsius": comp.Environmental_data.get_temperature_celsius,
        "humidity_percent": comp.Environmental_data.get_humidity_percent,
        "co2_level_ppm": comp.Environmental_data.get_co2_level_ppm,
        "noise_level_db": comp.Environmental_data.get_noise_level_db,
        "rainfall_mm": comp.Environmental_data.get_rainfall_mm,
        "wind_speed_kph": comp.Environmental_data.get_wind_speed_kph,
        "location": comp.Environmental_data.get_location,
        "country": comp.Environmental_data.get_country,
        "measurement_date": comp.Environmental_data.get_measurement_date,
        "measurement_time": comp.Environmental_data.get_measurement_time,
        "uv_index": comp.Environmental_data.get_uv_index,
        "water_quality_index": comp.Environmental_data.get_water_quality_index,
        "pm25": comp.Environmental_data.get_pm25,
        "pm10": comp.Environmental_data.get_pm10,
        "ozone_level_ppb": comp.Environmental_data.get_ozone_level_ppb,
        "so2_level_ppb": comp.Environmental_data.get_so2_level_ppb,
        "no2_level_ppb": comp.Environmental_data.get_no2_level_ppb,
        "pollution_source": comp.Environmental_data.get_pollution_source,




            "transaction_id": comp.financial_data.get_transaction_id,
            "amount": comp.financial_data.get_amount,
            "currency": comp.financial_data.get_currency,
            "transaction_date": comp.financial_data.get_transaction_date,
            "payment_method": comp.financial_data.get_payment_method,
            "account_number": comp.financial_data.get_account_number,
            "customer_id": comp.financial_data.get_customer_id,
            "merchant_name": comp.financial_data.get_merchant_name,
            "transaction_status": comp.financial_data.get_transaction_status,
            "country": comp.financial_data.get_country,
            "city": comp.financial_data.get_city,
            "zip_code": comp.financial_data.get_zip_code,
            "reference_number": comp.financial_data.get_reference_number,
            "card_type": comp.financial_data.get_card_type,
            "card_expiry": comp.financial_data.get_card_expiry,
            "fraud_flag": comp.financial_data.get_fraud_flag,
            "exchange_rate": comp.financial_data.get_exchange_rate,
            "fee_amount": comp.financial_data.get_fee_amount,
            "refund_status": comp.financial_data.get_refund_status,
            "branch_code": comp.financial_data.get_branch_code,
           

            "product_id": comp.food_supply_chain.generate_product_id,
            "product_name": comp.food_supply_chain.generate_product_name,
            "supplier": comp.food_supply_chain.generate_supplier,
            "batch_number": comp.food_supply_chain.generate_batch_number,
            # "production_date": comp.food_supply_chain.production_date,
            # "expiration_date": comp.food_supply_chain.expiration_date,
            "quantity": comp.food_supply_chain.generate_quantity,
            "storage_temperature": comp.food_supply_chain.generate_storage_temperature,
            "transport_method": comp.food_supply_chain.generate_transport_method,
            "origin_country": comp.food_supply_chain.generate_origin_country,
            "destination_country": comp.food_supply_chain.generate_destination_country,
            "quality_check": comp.food_supply_chain.generate_quality_check,
            "shipping_cost": comp.food_supply_chain.generate_shipping_cost,
            "delivery_status": comp.food_supply_chain.generate_delivery_status,
            "food_category": comp.food_supply_chain.generate_food_category,
            "packaging_type": comp.food_supply_chain.generate_packaging_type,
            "barcode": comp.food_supply_chain.generate_barcode,
            "inspection_date": comp.food_supply_chain.generate_inspection_date,



            "game_id": comp.gaming_data.generate_game_id,
            "player_id": comp.gaming_data.generate_player_id,
            "player_username": comp.gaming_data.generate_player_username,
            "game_name": comp.gaming_data.generate_game_name,
            "score": comp.gaming_data.generate_score,
            "level_reached": comp.gaming_data.generate_level_reached,
            "play_time": comp.gaming_data.generate_play_time,
            "device_type": comp.gaming_data.generate_device_type,
            "region": comp.gaming_data.generate_region,
            "in_game_purchases": comp.gaming_data.generate_in_game_purchases,
            "achievement_unlocked": comp.gaming_data.generate_achievement_unlocked,
            "match_outcome": comp.gaming_data.generate_match_outcome,
            "team_size": comp.gaming_data.generate_team_size,
            "match_duration": comp.gaming_data.generate_match_duration,
            "game_mode": comp.gaming_data.generate_game_mode,
            "connection_type": comp.gaming_data.generate_connection_type,
            "event_participation": comp.gaming_data.generate_event_participation,
            "item_collected": comp.gaming_data.generate_item_collected,
            "chat_messages": comp.gaming_data.generate_chat_messages,
            "friends_count": comp.gaming_data.generate_friends_count,

            "sample_id": comp.genomic_data.generate_sample_id,
            "gene_name": comp.genomic_data.generate_gene_name,
            "gene_sequence": comp.genomic_data.generate_gene_sequence,
            "mutation_type": comp.genomic_data.generate_mutation_type,
            "chromosome_number": comp.genomic_data.generate_chromosome_number,
            "position": comp.genomic_data.generate_position,
            "genotype": comp.genomic_data.generate_genotype,
            "expression_level": comp.genomic_data.generate_expression_level,
            "variation_frequency": comp.genomic_data.generate_variation_frequency,
            "disease_association": comp.genomic_data.generate_disease_association,
            "sample_source": comp.genomic_data.generate_sample_source,
            "reference_genome": comp.genomic_data.generate_reference_genome,
            "gene_family": comp.genomic_data.generate_gene_family,
            "transcription_factor": comp.genomic_data.generate_transcription_factor,
            "snp_id": comp.genomic_data.generate_snp_id,
            "allele_frequency": comp.genomic_data.generate_allele_frequency,
            "methylation_level": comp.genomic_data.generate_methylation_level,
            "exon_number": comp.genomic_data.generate_exon_number,
            "pathogenicity_score": comp.genomic_data.generate_pathogenicity_score,



            "location_id": comp.geospatial_data.get_location_id,
            "latitude": comp.geospatial_data.get_latitude,
            "longitude": comp.geospatial_data.get_longitude,
            "altitude": comp.geospatial_data.get_altitude,
            "country": comp.geospatial_data.get_country,
            "city": comp.geospatial_data.get_city,
            "zip_code": comp.geospatial_data.get_zip_code,
            "region": comp.geospatial_data.get_region,
            "continent": comp.geospatial_data.get_continent,
            "geohash": comp.geospatial_data.get_geohash,
            "address": comp.geospatial_data.get_address,
            "landmark": comp.geospatial_data.get_landmark,
            "population_density": comp.geospatial_data.get_population_density,
            "urban_rural": comp.geospatial_data.get_urban_rural,
            "time_zone": comp.geospatial_data.get_time_zone,
            "area_size": comp.geospatial_data.get_area_size,
            "climate_zone": comp.geospatial_data.get_climate_zone,
            "transport_access": comp.geospatial_data.get_transport_access,
            "environment_type": comp.geospatial_data.get_environment_type,

            "citizen_id": comp.governmentsector_data.get_citizen_id,
            "full_name": comp.governmentsector_data.get_full_name,
            "birth_date": comp.governmentsector_data.get_birth_date,
            "address": comp.governmentsector_data.get_address,
            "city": comp.governmentsector_data.get_city,
            "state": comp.governmentsector_data.get_state,
            "country": comp.governmentsector_data.get_country,
            "postal_code": comp.governmentsector_data.get_postal_code,
            "phone_number": comp.governmentsector_data.get_phone_number,
            "email": comp.governmentsector_data.get_email,
            "department": comp.governmentsector_data.get_department,
            "service_type": comp.governmentsector_data.get_service_type,
            "application_id": comp.governmentsector_data.get_application_id,
            "request_date": comp.governmentsector_data.get_request_date,
            "processing_status": comp.governmentsector_data.get_processing_status,
            "service_fee": comp.governmentsector_data.get_service_fee,
            "case_officer": comp.governmentsector_data.get_case_officer,
            "service_location": comp.governmentsector_data.get_service_location,
            "beneficiary_type": comp.governmentsector_data.get_beneficiary_type,
            "policy_reference": comp.governmentsector_data.get_policy_reference,

            "employee_id": comp.HR_data.generate_employee_id,
            "first_name": comp.HR_data.generate_first_name,
            "last_name": comp.HR_data.generate_last_name,
            "department": comp.HR_data.generate_department,
            "position": comp.HR_data.generate_position,
            "hire_date": comp.HR_data.generate_hire_date,
            "salary": comp.HR_data.generate_salary,
            "email": comp.HR_data.generate_email,
            "phone_number": comp.HR_data.generate_phone_number,
            "performance_rating": comp.HR_data.generate_performance_rating,
            "employment_status": comp.HR_data.generate_employment_status,
            "manager_id": comp.HR_data.generate_manager_id,
            "birth_date": comp.HR_data.generate_birth_date,
            "gender": comp.HR_data.generate_gender,
            "address": comp.HR_data.generate_address,
            "work_location":comp.HR_data.generate_work_location,
            "contract_type": comp.HR_data.generate_contract_type,
            "benefit_plan": comp.HR_data.generate_benefit_plan,
            "leave_balance": comp.HR_data.generate_leave_balance,
            "promotion_status": comp.HR_data.generate_promotion_status, 

            "image_id": comp.image_data.generate_image_id,
            "image_url": comp.image_data.generate_image_url,
            "image_format": comp.image_data.generate_image_format,
            "resolution": comp.image_data.generate_resolution,
            "file_size": comp.image_data.generate_file_size,
            "color_mode": comp.image_data.generate_color_mode,
            "capture_device": comp.image_data.generate_capture_device,
            "location": comp.image_data.generate_location,
            "capture_date": comp.image_data.generate_capture_date,
            "license_type": comp.image_data.generate_license_type,
            "alt_text": comp.image_data.generate_alt_text,
            "image_category": comp.image_data.generate_image_category,
            "aspect_ratio": comp.image_data.generate_aspect_ratio,
            "metadata": comp.image_data.generate_metadata,
            "photographer": comp.image_data.generate_photographer,
            "watermark": comp.image_data.generate_watermark,
            "image_tags": comp.image_data.generate_image_tags,
            "image_source": comp.image_data.generate_image_source,
            "focal_length": comp.image_data.generate_focal_length,
            "image_orientation": comp.image_data.generate_image_orientation,

            "policy_id": comp.Insurance_data.generate_policy_id,
            "policy_holder_name": comp.Insurance_data.generate_policy_holder_name,
            "policy_type": comp.Insurance_data.generate_policy_type,
            "premium_amount": comp.Insurance_data.generate_premium_amount,
            "policy_start_date": comp.Insurance_data.generate_policy_start_date,
            "policy_end_date": comp.Insurance_data.generate_policy_end_date,
            "claim_status": comp.Insurance_data.generate_claim_status,
            "claim_amount": comp.Insurance_data.generate_claim_amount,
            "insurer_name": comp.Insurance_data.generate_insurer_name,
            "policy_number": comp.Insurance_data.generate_policy_number,
            "beneficiary_name": comp.Insurance_data.generate_beneficiary_name,
            "contact_number": comp.Insurance_data.generate_contact_number,
            "email": comp.Insurance_data.generate_email,
            "address": comp.Insurance_data.generate_address,
            "policy_renewal_status": comp.Insurance_data.generate_policy_renewal_status,
            "risk_category": comp.Insurance_data.generate_risk_category,
            "policy_discount": comp.Insurance_data.generate_policy_discount,
            "underwriter": comp.Insurance_data.generate_underwriter,
            "claim_date": comp.Insurance_data.generate_claim_date,
            "policy_status": comp.Insurance_data.generate_policy_status,

            "inventory_id": comp.Inventory_data.generate_inventory_id,
            "product_name": comp.Inventory_data.generate_product_name,
            "product_category": comp.Inventory_data.generate_product_category,
            "quantity_available": comp.Inventory_data.generate_quantity_available,
            "warehouse_location": comp.Inventory_data.generate_warehouse_location,
            "supplier_name": comp.Inventory_data.generate_supplier_name,
            "supplier_contact": comp.Inventory_data.generate_supplier_contact,
            "last_restocked_date": comp.Inventory_data.generate_last_restocked_date,
            "expiration_date": comp.Inventory_data.generate_expiration_date,
            "cost_per_unit": comp.Inventory_data.generate_cost_per_unit,
            "selling_price": comp.Inventory_data.generate_selling_price,
            "reorder_level": comp.Inventory_data.generate_reorder_level,
            "stock_status": comp.Inventory_data.generate_stock_status,

           "investment_id": comp.Investment_data.generate_investment_id,
            "investor_name": comp.Investment_data.generate_investor_name,
            "investment_type": comp.Investment_data.generate_investment_type,
            "investment_amount": comp.Investment_data.generate_investment_amount,
            "currency": comp.Investment_data.generate_currency,
            "investment_date": comp.Investment_data.generate_investment_date,
            "maturity_date": comp.Investment_data.generate_maturity_date,
            "risk_level": comp.Investment_data.generate_risk_level,
            "return_rate": comp.Investment_data.generate_return_rate,
            "broker_name": comp.Investment_data.generate_broker_name,
            "investment_status": comp.Investment_data.generate_investment_status,
            "account_id": comp.Investment_data.generate_account_id,
            "portfolio_id": comp.Investment_data.generate_portfolio_id,
            "market_sector": comp.Investment_data.generate_market_sector,
            "dividends": comp.Investment_data.generate_dividends,
            "tax_rate": comp.Investment_data.generate_tax_rate,
            "advisor_name": comp.Investment_data.generate_advisor_name,
            "geographical_region": comp.Investment_data.generate_geographical_region,
            "transaction_fee": comp.Investment_data.generate_transaction_fee,
            "investment_strategy": comp.Investment_data.generate_investment_strategy,

            "device_id": comp.IOT_data.get_device_id,
            "device_type": comp.IOT_data.get_device_type,
            "temperature": comp.IOT_data.get_temperature,
            "humidity": comp.IOT_data.get_humidity,
            "battery_level": comp.IOT_data.get_battery_level,
            "signal_strength": comp.IOT_data.get_signal_strength,
            "firmware_version": comp.IOT_data.get_firmware_version,
            "location": comp.IOT_data.get_location,
            "connection_status": comp.IOT_data.get_connection_status,
            "last_active": comp.IOT_data.get_last_active,
            "data_rate": comp.IOT_data.get_data_rate,
            "ip_address": comp.IOT_data.get_ip_address,
            "mac_address": comp.IOT_data.get_mac_address,
            "power_consumption": comp.IOT_data.get_power_consumption,
            "alert_status": comp.IOT_data.get_alert_status,
            "uptime_hours": comp.IOT_data.get_uptime_hours,
            "device_owner": comp.IOT_data.get_device_owner,
            "network_type": comp.IOT_data.get_network_type,
            "data_packet_size": comp.IOT_data.get_data_packet_size,
            "device_model": comp.IOT_data.get_device_model,

           "device_id": comp.IT_infrastructure_data.generate_device_id,
            "device_type": comp.IT_infrastructure_data.generate_device_type,
            "ip_address": comp.IT_infrastructure_data.generate_ip_address,
            "mac_address": comp.IT_infrastructure_data.generate_mac_address,
            "os_version": comp.IT_infrastructure_data.generate_os_version,
            "location": comp.IT_infrastructure_data.generate_location,
            "status": comp.IT_infrastructure_data.generate_status,
            "last_update": comp.IT_infrastructure_data.generate_last_update,
            "owner_name": comp.IT_infrastructure_data.generate_owner_name,
            "serial_number": comp.IT_infrastructure_data.generate_serial_number,
            "rack_location": comp.IT_infrastructure_data.generate_rack_location,
            "power_consumption": comp.IT_infrastructure_data.generate_power_consumption,
            "uptime": comp.IT_infrastructure_data.generate_uptime,
            "network_speed": comp.IT_infrastructure_data.generate_network_speed,
            "firmware_version": comp.IT_infrastructure_data.generate_firmware_version,
            "device_role": comp.IT_infrastructure_data.generate_device_role,
            "security_level": comp.IT_infrastructure_data.generate_security_level,
            "contract_expiry": comp.IT_infrastructure_data.generate_contract_expiry,

            "compliance_id": comp.legal_compliance_data.get_compliance_id,
            "regulation_name": comp.legal_compliance_data.get_regulation_name,
            "compliance_status": comp.legal_compliance_data.get_compliance_status,
            "audit_date": comp.legal_compliance_data.get_audit_date,
            "auditor_name": comp.legal_compliance_data.get_auditor_name,
            "violation_flag": comp.legal_compliance_data.get_violation_flag,
            "fine_amount": comp.legal_compliance_data.get_fine_amount,
            "policy_version": comp.legal_compliance_data.get_policy_version,
            "department": comp.legal_compliance_data.get_department,
            "remediation_status": comp.legal_compliance_data.get_remediation_status,
            "risk_level": comp.legal_compliance_data.get_risk_level,
            "data_type": comp.legal_compliance_data.get_data_type,
            "review_cycle": comp.legal_compliance_data.get_review_cycle,
            "internal_control": comp.legal_compliance_data.get_internal_control,
            "incident_reported": comp.legal_compliance_data.get_incident_reported,
            "third_party_involvement":comp.legal_compliance_data.get_third_party_involvement,
            "compliance_officer": comp.legal_compliance_data.get_compliance_officer,
            "documentation_status": comp.legal_compliance_data.get_documentation_status,
            "penalty_type": comp.legal_compliance_data.get_penalty_type,
            "compliance_deadline": comp.legal_compliance_data.get_compliance_deadline,

            "animal_id": comp.livestock_data.generate_animal_id,
            "species": comp.livestock_data.generate_species,
            "breed": comp.livestock_data.generate_breed,
            "birth_date": comp.livestock_data.generate_birth_date,
            "weight": comp.livestock_data.generate_weight,
            "health_status": comp.livestock_data.generate_health_status,
            "farm_location": comp.livestock_data.generate_farm_location,
            "owner_name": comp.livestock_data.generate_owner_name,
            "feed_type": comp.livestock_data.generate_feed_type,
            "veterinary_checkup_date": comp.livestock_data.generate_checkup_date,
            "milk_production": comp.livestock_data.generate_milk_production,
            "reproductive_status": comp.livestock_data.generate_reproductive_status,
            "tag_number": comp.livestock_data.generate_tag_number,
            "vaccination_status": comp.livestock_data.generate_vaccination_status,
            "transportation_method": comp.livestock_data.generate_transportation_method,
            "destination": comp.livestock_data.generate_destination,
            "inspection_result": comp.livestock_data.generate_inspection_result,
            "sales_price": comp.livestock_data.generate_sales_price,

            "shipment_id": comp.logistic_data.get_shipment_id,
            "origin": comp.logistic_data.get_origin,
            "destination": comp.logistic_data.get_destination,
            "departure_date": comp.logistic_data.get_departure_date,
            "arrival_date": comp.logistic_data.get_arrival_date,
            "transport_mode": comp.logistic_data.get_transport_mode,
            "carrier_name": comp.logistic_data.get_carrier_name,
            "tracking_number": comp.logistic_data.get_tracking_number,
            "package_weight": comp.logistic_data.get_package_weight,
            "package_volume": comp.logistic_data.get_package_volume,
            "status": comp.logistic_data.get_status,
            "customer_name": comp.logistic_data.get_customer_name,
            "contact_number": comp.logistic_data.get_contact_number,
            "shipping_cost": comp.logistic_data.get_shipping_cost,
            "priority_level": comp.logistic_data.get_priority_level,
            "vehicle_id": comp.logistic_data.get_vehicle_id,
            "driver_name": comp.logistic_data.get_driver_name,
            "delivery_address":comp.logistic_data.get_delivery_address,
            "customs_clearance_status": comp.logistic_data.get_customs_clearance_status,
            "insurance_coverage": comp.logistic_data.get_insurance_coverage,

           "product_id": comp.Manufacturing_data.get_product_id,
            "product_name": comp.Manufacturing_data.get_product_name,
            "batch_number": comp.Manufacturing_data.get_batch_number,
            "manufacturing_date": comp.Manufacturing_data.get_manufacturing_date,
            "expiry_date": comp.Manufacturing_data.get_expiry_date,
            "factory_location": comp.Manufacturing_data.get_factory_location,
            "machine_id": comp.Manufacturing_data.get_machine_id,
            "worker_id": comp.Manufacturing_data.get_worker_id,
            "quality_check_status":comp.Manufacturing_data. get_quality_check_status,
            "material_used": comp.Manufacturing_data.get_material_used,
            "production_cost": comp.Manufacturing_data.get_production_cost,
            "output_quantity": comp.Manufacturing_data.get_output_quantity,
            "defect_rate": comp.Manufacturing_data.get_defect_rate,
            "shift": comp.Manufacturing_data.get_shift,
            "supervisor_name": comp.Manufacturing_data.get_supervisor_name,
            "power_consumption": comp.Manufacturing_data.get_power_consumption,
            "production_line": comp.Manufacturing_data.get_production_line,
            "storage_condition": comp.Manufacturing_data.get_storage_condition,
            "shipping_status": comp.Manufacturing_data.get_shipping_status,
            "equipment_used": comp.Manufacturing_data.get_equipment_used,

            "ship_id": comp.maritime_data.get_ship_id,
            "ship_name": comp.maritime_data.get_ship_name,
            "departure_port": comp.maritime_data.get_port,
            "arrival_port": comp.maritime_data.get_port,
            "departure_date": comp.maritime_data.get_departure_date,
            "arrival_date": comp.maritime_data.get_arrival_date,
            "cargo_type": comp.maritime_data.get_cargo_type,
            "ship_type": comp.maritime_data.get_ship_type,
            "weight_tons": comp.maritime_data.get_weight_tons,
            "crew_size": comp.maritime_data.get_crew_size,
            "vessel_flag": comp.maritime_data.get_vessel_flag,
            "shipping_company": comp.maritime_data.get_shipping_company,
            "speed_knots": comp.maritime_data.get_speed_knots,
            "navigation_status": comp.maritime_data.get_navigation_status,
            "incident_reported": comp.maritime_data.get_incident_reported,
            "ship_registration_number": comp.maritime_data.get_registration_number,
            "latitude": comp.maritime_data.get_latitude,
            "longitude": comp.maritime_data.get_longitude,


            "campaign_id": comp.marketing_data.get_campaign_id,
            "campaign_name": comp.marketing_data.get_campaign_name,
            "channel": comp.marketing_data.get_channel,
            "budget": comp.marketing_data.get_budget,
            "start_date": comp.marketing_data.get_start_date,
            "end_date": comp.marketing_data.get_end_date,
            "target_audience": comp.marketing_data.get_target_audience,
            "conversion_rate": comp.marketing_data.get_conversion_rate,
            "impressions": comp.marketing_data.get_impressions,
            "clicks": comp.marketing_data.get_clicks,
            "cost_per_click": comp.marketing_data.get_cost_per_click,
            "roi": comp.marketing_data.get_roi,
            "region": comp.marketing_data.get_region,
            "ad_type": comp.marketing_data.get_ad_type,
            "campaign_status": comp.marketing_data.get_campaign_status,
            "lead_count": comp.marketing_data.get_lead_count,
            "customer_acquisition_cost": comp.marketing_data.get_customer_acquisition_cost,
            "engagement_rate": comp.marketing_data.get_engagement_rate,
            "revenue": comp.marketing_data.get_revenue,
            "feedback": comp.marketing_data.get_feedback,

            "patient_id": comp.medical_data.generate_patient_id,
            "patient_name": comp.medical_data.generate_patient_name,
            "age": comp.medical_data.generate_age,
            "gender": comp.medical_data.generate_gender,
            "diagnosis": comp.medical_data.generate_diagnosis,
            "admission_date": comp.medical_data.generate_admission_date,
            "discharge_date": comp.medical_data.generate_discharge_date,
            "doctor_name": comp.medical_data.generate_doctor_name,
            "department": comp.medical_data.generate_department,
            "medication": comp.medical_data.generate_medication,
            "allergies": comp.medical_data.generate_allergies,
            "blood_type": comp.medical_data.generate_blood_type,
            "insurance_provider": comp.medical_data.generate_insurance_provider,
            "policy_number": comp.medical_data.generate_policy_number,
            "emergency_contact": comp.medical_data.generate_emergency_contact,
            "visit_type": comp.medical_data.generate_visit_type,
            "procedure": comp.medical_data.generate_procedure,
            "hospital_name": comp.medical_data.generate_hospital_name,
            "billing_amount": comp.medical_data.generate_billing_amount,
            "followup_date": comp.medical_data.generate_followup_date,

           "document_id": comp.NLP_data.generate_document_id,
            "text_snippet": comp.NLP_data.generate_text_snippet,
            "sentiment": comp.NLP_data.generate_sentiment,
            "language": comp.NLP_data.generate_language,
            "author": comp.NLP_data.generate_author,
            "publication_date": comp.NLP_data.generate_publication_date,
            "topic": comp.NLP_data.generate_topic,
            "text_length": comp.NLP_data.generate_text_length,
            "document_type": comp.NLP_data.generate_document_type,
            "summary": comp.NLP_data.generate_summary,
            "keyword": comp.NLP_data.generate_keyword,
            "readability_score": comp.NLP_data.generate_readability_score,
            "sentiment_score": comp.NLP_data.generate_sentiment_score,
            "text_source": comp.NLP_data.generate_text_source,
            "entity_count": comp.NLP_data.generate_entity_count,
            "named_entities": comp.NLP_data.generate_named_entities,
            "emotion": comp.NLP_data.generate_emotion,
            "language_model": comp.NLP_data.generate_language_model,
            "translation": comp.NLP_data.generate_translation,
            "source_url": comp.NLP_data.generate_source_url,

            "course_id": comp.online_learning_data.generate_course_id,
            "course_name": comp.online_learning_data.generate_course_name,
            "instructor_name": comp.online_learning_data.generate_instructor_name,
            "student_id": comp.online_learning_data.generate_student_id,
            "student_name": comp.online_learning_data.generate_student_name,
            "enrollment_date": comp.online_learning_data.generate_enrollment_date,
            # "completion_date": comp.online_learning_data.generate_completion_date(enrollment_date),
            "course_duration_weeks": comp.online_learning_data.generate_course_duration_weeks,
            "grade": comp.online_learning_data.generate_grade,
            "course_level": comp.online_learning_data.generate_course_level,
            "platform": comp.online_learning_data.generate_platform,
            "student_age": comp.online_learning_data.generate_student_age,
            "country": comp.online_learning_data.generate_country,
            "language": comp.online_learning_data.generate_language,
            "certification_awarded": comp.online_learning_data.generate_certification_awarded,
            "feedback_score": comp.online_learning_data.generate_feedback_score,
            "device_used": comp.online_learning_data.generate_device_used,
            "payment_method": comp.online_learning_data.generate_payment_method,

            "order_id": comp.Order_management_data.generate_order_id,
            "customer_id": comp.Order_management_data.generate_customer_id,
            "order_date": comp.Order_management_data.generate_order_date,
            "order_status": comp.Order_management_data.generate_order_status,
            "total_amount": comp.Order_management_data.generate_total_amount,
            "payment_method": comp.Order_management_data.generate_payment_method,
            "shipping_address": comp.Order_management_data.generate_shipping_address,
            "billing_address": comp.Order_management_data.generate_billing_address,
            "delivery_date": comp.Order_management_data.generate_delivery_date,
            "order_notes": comp.Order_management_data.generate_order_notes,

            "pensioner_name": comp.pension_data.get_pensioner_name,
            "pension_type": comp.pension_data.get_pension_type,
            "pension_amount": comp.pension_data.get_pension_amount,
            "currency": comp.pension_data.get_currency,
            "retirement_date": comp.pension_data.get_retirement_date,
            "pension_status": comp.pension_data.get_pension_status,
            "contribution_amount": comp.pension_data.get_contribution_amount,
            "beneficiary_name": comp.pension_data.get_beneficiary_name,
            "benefit_frequency": comp.pension_data.get_benefit_frequency,
            "plan_id": comp.pension_data.get_plan_id,
            "insurer_name": comp.pension_data.get_insurer_name,
            "payout_amount": comp.pension_data.get_payout_amount,
            "tax_rate": comp.pension_data.get_tax_rate,
            "pension_id": comp.pension_data.get_pension_id,
            "advisor_name": comp.pension_data.get_advisor_name,
            "geographical_region": comp.pension_data.get_geographical_region,
            "employer_contribution": comp.pension_data.get_employer_contribution,
            "retirement_age": comp.pension_data.get_retirement_age,
            "withdrawal_date": comp.pension_data.get_withdrawal_date,
            "investment_strategy": comp.pension_data.get_investment_strategy,

          "transaction_id": comp.POS_data.get_transaction_id,
            "store_id": comp.POS_data.get_store_id,
            "cashier_id": comp.POS_data.get_cashier_id,
            "customer_id": comp.POS_data.get_customer_id,
            "product_id": comp.POS_data.get_product_id,
            "product_name": comp.POS_data.get_product_name,
            "category": comp.POS_data.get_category,
            "quantity": comp.POS_data.get_quantity,
            "price_per_unit": comp.POS_data.get_price_per_unit,
            "total_price": comp.POS_data.get_total_price,
            "payment_method": comp.POS_data.get_payment_method,
            "transaction_date": comp.POS_data.get_transaction_date,
            "transaction_time": comp.POS_data.get_transaction_time,
            "discount_applied": comp.POS_data.get_discount_applied,
            "tax_amount": comp.POS_data.get_tax_amount,
            "final_amount": comp.POS_data.get_final_amount,

            "product_id": comp.product_data.get_product_id,
            "product_name": comp.product_data.get_product_name,
            "category": comp.product_data.get_category,
            "price": comp.product_data.get_price,
            "stock_quantity": comp.product_data.get_stock_quantity,
            "supplier": comp.product_data.get_supplier,
            "manufacture_date": comp.product_data.get_manufacture_date,
            "expiry_date": comp.product_data.get_expiry_date,
            "rating": comp.product_data.get_rating,

            "purchase_order_id": comp.purchase_order_data.get_purchase_order_id,
            "supplier_name": comp.purchase_order_data.get_supplier_name,
            "product_name": comp.purchase_order_data.get_product_name,
            "quantity": comp.purchase_order_data.get_quantity,
            "unit_price": comp.purchase_order_data.get_unit_price,
            "total_cost": comp.purchase_order_data.get_total_cost,
            "order_date": comp.purchase_order_data.get_order_date,
            "delivery_date": comp.purchase_order_data.get_delivery_date,
            "order_status": comp.purchase_order_data.get_order_status,
            "payment_status": comp.purchase_order_data.get_payment_status,

            "property_id": comp.real_state_data.generate_property_id,
            "listing_price": comp.real_state_data.generate_listing_price,
            "property_type": comp.real_state_data.generate_property_type,
            "address": comp.real_state_data.generate_address,
            "city": comp.real_state_data.generate_city,
            "state": comp.real_state_data.generate_state,
            "zip_code": comp.real_state_data.generate_zip_code,
            "country": comp.real_state_data.generate_country,
            "bedrooms": comp.real_state_data.generate_bedrooms,
            "bathrooms": comp.real_state_data.generate_bathrooms,
            "square_feet": comp.real_state_data.generate_square_feet,
            "listing_date": comp.real_state_data.generate_listing_date,
            "sale_status": comp.real_state_data.generate_sale_status,
            "agent_name": comp.real_state_data.generate_agent_name,
            "agent_phone": comp.real_state_data.generate_agent_phone,
            "year_built": comp.real_state_data.generate_year_built,
            "parking_spaces": comp.real_state_data.generate_parking_spaces,
            "property_tax": comp.real_state_data.generate_property_tax,
            "listing_description": comp.real_state_data.generate_listing_description,
            "hoa_fee": comp.real_state_data.generate_hoa_fee,

            "product_id": comp.retail_data.get_product_id,
            "product_name": comp.retail_data.get_product_name,
            "category": comp.retail_data.get_category,
            "price": comp.retail_data.get_price,
            "discount": comp.retail_data.get_discount,
            "stock_quantity": comp.retail_data.get_stock_quantity,
            "supplier": comp.retail_data.get_supplier,
            "brand": comp.retail_data.get_brand,
            "sku": comp.retail_data.get_sku,
            "store_location": comp.retail_data.get_store_location,
            "sale_date": comp.retail_data.get_sale_date,
            "customer_id": comp.retail_data.get_customer_id,
            "payment_method": comp.retail_data.get_payment_method,
            "return_status": comp.retail_data.get_return_status,
            "review_score": comp.retail_data.get_review_score,
            "shipping_cost": comp.retail_data.get_shipping_cost,
            "tax_amount": comp.retail_data.get_tax_amount,
            "delivery_status": comp.retail_data.get_delivery_status,
            "warranty_period": comp.retail_data.get_warranty_period,
            "sales_channel": comp.retail_data.get_sales_channel,

            "sale_id": comp.sales_data.generate_sale_id,
            "product_name": comp.sales_data.generate_product_name,
            "customer_id": comp.sales_data.generate_customer_id,
            "sale_date": comp.sales_data.generate_sale_date,
            "quantity": comp.sales_data.generate_quantity,
            "unit_price": comp.sales_data.generate_unit_price,
            "total_amount": comp.sales_data.generate_total_amount,
            "discount": comp.sales_data.generate_discount,
            "payment_method": comp.sales_data.generate_payment_method,
            "salesperson": comp.sales_data.generate_salesperson,
            "region": comp.sales_data.generate_region,
            "country": comp.sales_data.generate_country,
            "invoice_number": comp.sales_data.generate_invoice_number,
            "customer_type": comp.sales_data.generate_customer_type,
            "return_status": comp.sales_data.generate_return_status,
            "shipping_method": comp.sales_data.generate_shipping_method,
            "delivery_status": comp.sales_data.generate_delivery_status,
            "product_category": comp.sales_data.generate_product_category,
            "loyalty_points": comp.sales_data.generate_loyalty_points,
            "channel": comp.sales_data.generate_channel,

            "text_id": comp.sentiment_data.get_text_id,
            "text": comp.sentiment_data.get_text,
            "sentiment": comp.sentiment_data.get_sentiment,
            "sentiment_score": comp.sentiment_data.get_sentiment_score,
            "language": comp.sentiment_data.get_language,
            "source": comp.sentiment_data.get_source,
            "timestamp": comp.sentiment_data.get_timestamp,
            "author": comp.sentiment_data.get_author,
            "topic": comp.sentiment_data.get_topic,
            "location": comp.sentiment_data.get_location,
            "emotion": comp.sentiment_data.get_emotion,
            "device_type": comp.sentiment_data.get_device_type,
            "platform": comp.sentiment_data.get_platform,
            "url": comp.sentiment_data.get_url,
            "keyword": comp.sentiment_data.get_keyword,
            "length_of_text": comp.sentiment_data.get_length_of_text,
            "category": comp.sentiment_data.get_category,
            "language_confidence": comp.sentiment_data.get_language_confidence,
            "user_type": comp.sentiment_data.get_user_type,

        "user_id": comp.social_media_data.get_user_id,
            "username": comp.social_media_data.get_username,
            "email": comp.social_media_data.get_email,
            "platform": comp.social_media_data.get_platform,
            "post_id": comp.social_media_data.get_post_id,
            "post_content": comp.social_media_data.get_post_content,
            "post_date": comp.social_media_data.get_post_date,
            "like_count": comp.social_media_data.get_like_count,
            "comment_count": comp.social_media_data.get_comment_count,
            "share_count": comp.social_media_data.get_share_count,
            "followers_count": comp.social_media_data.get_followers_count,
            "following_count": comp.social_media_data.get_following_count,
            "profile_creation_date": comp.social_media_data.get_profile_creation_date,
            "account_status": comp.social_media_data.get_account_status,
            "hashtags": comp.social_media_data.get_hashtags,
            "location": comp.social_media_data.get_location,
            "device_type": comp.social_media_data.get_device_type,
            "engagement_rate": comp.social_media_data.get_engagement_rate,
            "content_type": comp.social_media_data.get_content_type,
            "ad_impressions": comp.social_media_data.get_ad_impressions,

            "supplier_id": comp.Supplier_data.generate_supplier_id,
            "company_name": comp.Supplier_data.generate_company_name,
            "contact_name": comp.Supplier_data.generate_contact_name,
            "email": comp.Supplier_data.generate_email,
            "phone_number": comp.Supplier_data.generate_phone_number,
            "address": comp.Supplier_data.generate_address,
            "city": comp.Supplier_data.generate_city,
            "country": comp.Supplier_data.generate_country,
            "postal_code": comp.Supplier_data.generate_postal_code,
            "website": comp.Supplier_data.generate_website,
            "product_category": comp.Supplier_data.generate_product_category,
            "contract_start_date": comp.Supplier_data.generate_contract_start_date,
            "contract_end_date": comp.Supplier_data.generate_contract_end_date,
            "payment_terms": comp.Supplier_data.generate_payment_terms,
            "rating": comp.Supplier_data.generate_rating,

            "order_id": comp.SupplyChain_data.generate_order_id,
            "product_name": comp.SupplyChain_data.generate_product_name,
            "supplier_name": comp.SupplyChain_data.generate_supplier_name,
            "order_date": comp.SupplyChain_data.generate_order_date,
            "delivery_date": comp.SupplyChain_data.generate_delivery_date,
            "quantity": comp.SupplyChain_data.generate_quantity,
            "unit_price": comp.SupplyChain_data.generate_unit_price,
            # "total_cost": comp.SupplyChain_data.g
            "order_status": comp.SupplyChain_data.generate_order_status,
            "warehouse_location": comp.SupplyChain_data.generate_warehouse_location,
            "transport_mode": comp.SupplyChain_data.generate_transport_mode,
            "tracking_number": comp.SupplyChain_data.generate_tracking_number,
            "inventory_level": comp.SupplyChain_data.generate_inventory_level,
            "return_status": comp.SupplyChain_data.generate_return_status,
            "dispatch_center": comp.SupplyChain_data.generate_dispatch_center,
            "shipping_cost": comp.SupplyChain_data.generate_shipping_cost,
            "order_priority": comp.SupplyChain_data.generate_order_priority,
            "supplier_contact": comp.SupplyChain_data.generate_supplier_contact,
            "carrier_name": comp.SupplyChain_data.generate_carrier_name,

            "match_id": comp.supports_data.generate_match_id,
            "sport_type": comp.supports_data.generate_sport_type,
            "team_1": comp.supports_data.generate_team_1,
            "team_2": comp.supports_data.generate_team_2,
            "match_date": comp.supports_data.generate_match_date,
            "match_location": comp.supports_data.generate_match_location,
            "score_team_1": comp.supports_data.generate_score_team_1,
            "score_team_2": comp.supports_data.generate_score_team_2,
            "winner": comp.supports_data.generate_winner,
            "referee_name": comp.supports_data.generate_referee_name,
            "duration": comp.supports_data.generate_duration,
            "tournament_name": comp.supports_data.generate_tournament_name,
            "player_of_the_match": comp.supports_data.generate_player_of_the_match,
            "attendance": comp.supports_data.generate_attendance,
            "ticket_price": comp.supports_data.generate_ticket_price,
            "weather_conditions": comp.supports_data.generate_weather_conditions,
            "broadcast_channel": comp.supports_data.generate_broadcast_channel,
            "sponsor_name": comp.supports_data.generate_sponsor_name,
            "injury_report": comp.supports_data.generate_injury_report,
            "match_status": comp.supports_data.generate_match_status,

            "survey_id": comp.survey_data.generate_survey_id,
            "respondent_id": comp.survey_data.generate_respondent_id,
            "survey_title": comp.survey_data.generate_survey_title,
            "question": comp.survey_data.generate_question,
            "response": comp.survey_data.generate_response,
            "response_date": comp.survey_data.generate_response_date,
            "location": comp.survey_data.generate_location,
            "age": comp.survey_data.generate_age,
            "gender": comp.survey_data.generate_gender,
            "income_level": comp.survey_data.generate_income_level,
            "education_level": comp.survey_data.generate_education_level,
            "satisfaction_score": comp.survey_data.generate_satisfaction_score,
            "feedback": comp.survey_data.generate_feedback,
            "device_used": comp.survey_data.generate_device_used,
            "channel": comp.survey_data.generate_channel,
            "follow_up_required": comp.survey_data.generate_follow_up_required,
            "time_spent": comp.survey_data.generate_time_spent,
            "ip_address": comp.survey_data.generate_ip_address,
            "language": comp.survey_data.generate_language,
            "survey_type": comp.survey_data.generate_survey_type,

            "subscriber_id": comp.telecom_data.generate_subscriber_id,
            "phone_number": comp.telecom_data.generate_phone_number,
            "plan_type": comp.telecom_data.generate_plan_type,
            "data_usage_gb": comp.telecom_data.generate_data_usage_gb,
            "call_duration_min": comp.telecom_data.generate_call_duration_min,
            "sms_count": comp.telecom_data.generate_sms_count,
            "billing_amount": comp.telecom_data.generate_billing_amount,
            "service_provider": comp.telecom_data.generate_service_provider,
            "country": comp.telecom_data.generate_country,
            "city": comp.telecom_data.generate_city,
            "connection_type": comp.telecom_data.generate_connection_type,
            "activation_date": comp.telecom_data.generate_activation_date,
            "payment_status": comp.telecom_data.generate_payment_status,
            "customer_age": comp.telecom_data.generate_customer_age,
            "device_type": comp.telecom_data.generate_device_type,
            "network_latency_ms": comp.telecom_data.generate_network_latency_ms,
            "contract_duration_months": comp.telecom_data.generate_contract_duration_months,
            "ip_address": comp.telecom_data.generate_ip_address,
            "customer_satisfaction": comp.telecom_data.generate_customer_satisfaction,
            "data_roaming": comp.telecom_data.generate_data_roaming,

        "video_id": comp.video_data.generate_video_id,
        "title": comp.video_data.generate_title,
        "duration": comp.video_data.generate_duration,
        "resolution": comp.video_data.generate_resolution,
        "format": comp.video_data.generate_format,
        "codec": comp.video_data.generate_codec,
        "bitrate": comp.video_data.generate_bitrate,
        "framerate": comp.video_data.generate_framerate,
        "aspect_ratio": comp.video_data.generate_aspect_ratio,
        "file_size": comp.video_data.generate_file_size,
        "category": comp.video_data.generate_category,
        "language": comp.video_data.generate_language,
        "uploaded_by": comp.video_data.generate_uploaded_by,
        "upload_date": comp.video_data.generate_upload_date,
        "license_type": comp.video_data.generate_license_type,
        "audio_codec": comp.video_data.generate_audio_codec,
        "subtitles": comp.video_data.generate_subtitles,
        "views": comp.video_data.generate_views,
        "likes": comp.video_data.generate_likes,
        "dislikes": comp.video_data.generate_dislikes,

        "station_id": comp.weather_data.generate_station_id,
        "station_name": comp.weather_data.generate_station_name,
        "temperature": comp.weather_data.generate_temperature,
        "humidity": comp.weather_data.generate_humidity,
        "wind_speed": comp.weather_data.generate_wind_speed,
        "wind_direction": comp.weather_data.generate_wind_direction,
        "precipitation": comp.weather_data.generate_precipitation,
        "pressure": comp.weather_data.generate_pressure,
        "visibility": comp.weather_data.generate_visibility,
        "cloud_cover": comp.weather_data.generate_cloud_cover,
        "weather_condition": comp.weather_data.generate_weather_condition,
        "recorded_at": comp.weather_data.generate_recorded_at,
        "uv_index": comp.weather_data.generate_uv_index,
        "air_quality_index": comp.weather_data.generate_air_quality_index,
        "dew_point": comp.weather_data.generate_dew_point,
        "solar_radiation": comp.weather_data.generate_solar_radiation,
        "fog_density": comp.weather_data.generate_fog_density,
        "rainfall_probability": comp.weather_data.generate_rainfall_probability,
        "snow_depth": comp.weather_data.generate_snow_depth,

        

    

    }           



    
def generate_fake_data(columns_config, num_rows):
    """
    Generate a DataFrame based on user-defined column config.
    :param columns_config: list of dicts, each with 'column_name' and 'data_type'
    :param num_rows: number of rows to generate
    :return: pandas DataFrame
    """
    mapping = get_faker_mapping()
    data = {}

    for col in columns_config:
        col_name = col["column_name"]
        data_type = col["data_type"]
        generator = mapping.get(data_type)
        data[col_name] = [generator() for _ in range(num_rows)]

    return pd.DataFrame(data)



